fit
fit <- lm(quality~ .^2, data = wineQualityTrain)
fit
summary(fit)
data.frame(t(fit1$results), t(fit2$results), t(fit3$results), t(fit4$results), t(fit5$results))
# Using the best training model on the test data
pred1 <- predict(fit1, newdata=wineQualityTest)
postResample(pred1, obs = wineQualityTest$quality)
#Cross validation
fit1 <- train(quality ~ ., data = wineQualityTrain,
method = "lm",
#preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
fit2 <- train(quality ~ `fixed acidity` + `volatile acidity` + `residual sugar` + `free sulfur dioxide` + `total sulfur dioxide` + density + sulphates + alcohol + type, data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
fit3 <- train(quality~`fixed acidity` + `volatile acidity` + `residual sugar` + `free sulfur dioxide` + `total sulfur dioxide` + density + sulphates + alcohol + type + I(`fixed acidity`^2) + I(`volatile acidity`^2) + I(`residual sugar`^2) + I(`free sulfur dioxide`^2) + I(`total sulfur dioxide`^2) + I(density^2) + I(sulphates^2) + I(alcohol^2), data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
fit4 <- train(quality~`fixed acidity` + `volatile acidity` + `residual sugar` + `free sulfur dioxide` + `total sulfur dioxide` + density + sulphates + alcohol + type + `fixed acidity`:`volatile acidity` + `fixed acidity`:`residual sugar` + `fixed acidity`:`free sulfur dioxide` + `fixed acidity`:`total sulfur dioxide` + `fixed acidity`:density + `fixed acidity`:sulphates + `fixed acidity`:alcohol, data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
fit5 <- train(quality~`fixed acidity` + `volatile acidity` + `residual sugar` + `free sulfur dioxide` + `total sulfur dioxide` + density + sulphates + alcohol + type + I(`residual sugar`^2) + I(`free sulfur dioxide`^2), data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
data.frame(t(fit1$results), t(fit2$results), t(fit3$results), t(fit4$results), t(fit5$results))
# Using the best training model on the test data
pred1 <- predict(fit1, newdata=wineQualityTest)
postResample(pred1, obs = wineQualityTest$quality)
#Cross validation
fit1 <- train(quality ~ ., data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
fit2 <- train(quality ~ `fixed acidity` + `volatile acidity` + `residual sugar` + `free sulfur dioxide` + `total sulfur dioxide` + density + sulphates + alcohol + type, data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
fit3 <- train(quality~`fixed acidity` + `volatile acidity` + `residual sugar` + `free sulfur dioxide` + `total sulfur dioxide` + density + sulphates + alcohol + type + I(`fixed acidity`^2) + I(`volatile acidity`^2) + I(`residual sugar`^2) + I(`free sulfur dioxide`^2) + I(`total sulfur dioxide`^2) + I(density^2) + I(sulphates^2) + I(alcohol^2), data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
fit4 <- train(quality~`fixed acidity` + `volatile acidity` + `residual sugar` + `free sulfur dioxide` + `total sulfur dioxide` + density + sulphates + alcohol + type + `fixed acidity`:`volatile acidity` + `fixed acidity`:`residual sugar` + `fixed acidity`:`free sulfur dioxide` + `fixed acidity`:`total sulfur dioxide` + `fixed acidity`:density + `fixed acidity`:sulphates + `fixed acidity`:alcohol, data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
fit5 <- train(quality~`fixed acidity` + `volatile acidity` + `residual sugar` + `free sulfur dioxide` + `total sulfur dioxide` + density + sulphates + alcohol + type + I(`residual sugar`^2) + I(`free sulfur dioxide`^2), data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
data.frame(t(fit1$results), t(fit2$results), t(fit3$results), t(fit4$results), t(fit5$results))
# Using the best training model on the test data
pred1 <- predict(fit4, newdata=wineQualityTest)
postResample(pred1, obs = wineQualityTest$quality)
#Cross validation
fit1 <- train(quality ~ ., data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
fit2 <- train(quality ~ `fixed acidity` + `volatile acidity` + `residual sugar` + `free sulfur dioxide` + `total sulfur dioxide` + density + sulphates + alcohol + type, data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
fit3 <- train(quality~`fixed acidity` + `volatile acidity` + `residual sugar` + `free sulfur dioxide` + `total sulfur dioxide` + density + sulphates + alcohol + type + I(`fixed acidity`^2) + I(`volatile acidity`^2) + I(`residual sugar`^2) + I(`free sulfur dioxide`^2) + I(`total sulfur dioxide`^2) + I(density^2) + I(sulphates^2) + I(alcohol^2), data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
fit4 <- train(quality~`fixed acidity` + `volatile acidity` + `residual sugar` + `free sulfur dioxide` + `total sulfur dioxide` + density + sulphates + alcohol + type + `fixed acidity`:`volatile acidity` + `fixed acidity`:`residual sugar` + `fixed acidity`:`free sulfur dioxide` + `fixed acidity`:`total sulfur dioxide` + `fixed acidity`:density + `fixed acidity`:sulphates + `fixed acidity`:alcohol, data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
fit5 <- train(quality~`fixed acidity` + `volatile acidity` + `residual sugar` + `free sulfur dioxide` + `total sulfur dioxide` + density + sulphates + alcohol + type + I(`residual sugar`^2) + I(`free sulfur dioxide`^2), data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
data.frame(t(fit1$results), t(fit2$results), t(fit3$results), t(fit4$results), t(fit5$results))
# Using the best training model on the test data
pred1 <- predict(fit1, newdata=wineQualityTest)
postResample(pred1, obs = wineQualityTest$quality)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(caret)
library(regclass)
#Read in train and test datasets
wineQualityTest <- read_delim("wineQualityTest.csv",
delim = ",",
col_names = c("fixed acidity", "volatile acidity", "citric acid", "residual sugar", "chlorides", "free sulfur dioxide", "total sulfur dioxide", "density", "pH", "sulphates", "alcohol", "quality", "type"), skip=1)
wineQualityTrain <- read_delim("wineQualityTrain.csv",
delim = ",",
col_names = c("fixed acidity", "volatile acidity", "citric acid", "residual sugar", "chlorides", "free sulfur dioxide", "total sulfur dioxide", "density", "pH", "sulphates", "alcohol", "quality", "type"), skip=1)
#standardize training and test data
wineQualityTrainStd <- preProcess(wineQualityTrain, method = c("center", "scale"))
wineQualityTestStd <- preProcess(wineQualityTest, method = c("center", "scale"))
wineQualityTrain <- wineQualityTrain %>%
mutate(Status = if_else(quality >= 6, 1,
if_else(quality < 6, 0)))
wineQualityTrain$quality
wineQualityTrain <- wineQualityTrain %>%
mutate(Status = if_else(quality >= 6, "1",
if_else(quality < 6, "0")))
wineQualityTrain <- wineQualityTrain %>%
mutate(Status = if_else(quality >= 6, 1,0))
wineQualityTrain$Status
wineQualityTrain
wineQualityTest <- wineQualityTest %>%
mutate(Status = if_else(quality >= 6, 1,0))
wineQualityTrainStd <- preProcess(wineQualityTrain, method = c("center", "scale"))
wineQualityTestStd <- preProcess(wineQualityTest, method = c("center", "scale"))
View(wineQualityTestStd)
glmFit <- glm(Status ~ ., data = wineQualityTrain, family = "binomial")
summary(glmFit)
ggiraphExtra::ggPredict(glmFit)
install.packages("ggiraphExtra")
Yes
install.packages("ggiraphExtra")
library("ggiraphExtra")
library(ggiraphExtra)
ggiraphExtra::ggPredict(glmFit)
summary(glmFit)
View(wineQualityTest)
glmFit <- glm(Status ~ `fixed acidity` + `volatile acidity` + `residual sugar` + `free sulfur dioxide`, data = wineQualityTrain, family = "binomial")
summary(glmFit)
ggiraphExtra::ggPredict(glmFit)
summary(glmFit)
glmFit <- glm(Status ~ `fixed acidity` + `volatile acidity` + `residual sugar`, data = wineQualityTrain, family = "binomial")
summary(glmFit)
ggiraphExtra::ggPredict(glmFit)
glmFit <- glm(Status ~ fixed acidity + volatile acidity + residual sugar, data = wineQualityTrain, family = "binomial")
glmFit <- glm(Status ~ `fixed acidity` + `volatile acidity` + `residual sugar`, data = wineQualityTrain, family = "binomial")
summary(glmFit)
glmFit <- glm(Status ~ `fixed acidity`*`volatile acidity`, data = wineQualityTrain, family = "binomial")
summary(glmFit)
ggiraphExtra::ggPredict(glmFit)
View(wineQualityTest)
glmFit <- glm(Status ~ density*sulphates, data = wineQualityTrain, family = "binomial")
summary(glmFit)
ggiraphExtra::ggPredict(glmFit)
glmFit <- glm(Status ~ `fixed acidity`, data = wineQualityTrain, family = "binomial")
summary(glmFit)
ggiraphExtra::ggPredict(glmFit)
colnames(wineQualityTrain) <- c("Fixed_acidity")
View(wineQualityTest)
View(wineQualityTrain)
wineQualityTrain <- wineQualityTrain %>%
mutate(Status = if_else(quality >= 6, 1,0))
colnames(wineQualityTrain) <- c("Fixed_acidity", "Volatile_acidity","Citric_acid","Residual_sugar", "Chlorides", "Free_sulphur_dioxide", "Total_sulfur_dioxide", "Density", "pH", "Sulphates", "Alcohol", "Quality")
wineQualityTrain <- wineQualityTrain %>%
mutate(Status = if_else(Quality >= 6, 1,0))
wineQualityTest <- read_delim("wineQualityTest.csv",
delim = ",",
col_names = c("Fixed_acidity", "Volatile_acidity","Citric_acid","Residual_sugar", "Chlorides", "Free_sulphur_dioxide", "Total_sulfur_dioxide", "Density", "pH", "Sulphates", "Alcohol", "Quality"), skip=1)
wineQualityTest <- wineQualityTest %>%
mutate(Status = if_else(Quality >= 6, 1,0))
wineQualityTrain <- read_delim("wineQualityTrain.csv",
delim = ",",
col_names = c("Fixed_acidity", "Volatile_acidity","Citric_acid","Residual_sugar", "Chlorides", "Free_sulphur_dioxide", "Total_sulfur_dioxide", "Density", "pH", "Sulphates", "Alcohol", "Quality"), skip=1)
wineQualityTrain <- wineQualityTrain %>%
mutate(Status = if_else(Quality >= 6, 1,0))
glmFit <- glm(Status ~ ., data = wineQualityTrain, family = "binomial")
summary(glmFit)
glmFit <- glm(Status ~ Fixed_acidity*Volatile_acidity, data = wineQualityTrain, family = "binomial")
summary(glmFit)
ggiraphExtra::ggPredict(glmFit)
glmFit <- glm(Status ~ Fixed_acidity + Volatile_acidity, data = wineQualityTrain, family = "binomial")
summary(glmFit)
ggiraphExtra::ggPredict(glmFit)
summary(glmFit)
glmFit <- glm(Status ~ Fixed_acidity + Volatile_acidity + Citric_acid + Residual_sugar , data = wineQualityTrain, family = "binomial")
summary(glmFit)
glmFit <- glm(Status ~ Fixed_acidity + Volatile_acidity + Citric_acid + Residual_sugar + Chlorides + Free_sulfur_dioxide , data = wineQualityTrain, family = "binomial")
glmFit <- glm(Status ~ Fixed_acidity + Volatile_acidity + Citric_acid + Residual_sugar + Chlorides + Free_sulphur_dioxide , data = wineQualityTrain, family = "binomial")
summary(glmFit)
glmFit <- glm(Status ~  Volatile_acidity +  Residual_sugar + Chlorides, data = wineQualityTrain, family = "binomial")
summary(glmFit)
ggiraphExtra::ggPredict(glmFit)
library(ggiraphExtra)
glmFit <- glm(Status ~  Volatile_acidity*Residual_sugar, data = wineQualityTrain, family = "binomial")
summary(glmFit)
ggiraphExtra::ggPredict(glmFit)
glmFit2 <- glm(Status ~  Volatile_acidity*Chlorides, data = wineQualityTrain, family = "binomial")
summary(glmFit)
ggiraphExtra::ggPredict(glmFit)
summary(glmFit2)
ggiraphExtra::ggPredict(glmFit2)
glmFit2 <- glm(Status ~  Volatile_acidity*Alcohol, data = wineQualityTrain, family = "binomial")
summary(glmFit2)
ggiraphExtra::ggPredict(glmFit2)
glmFit2 <- glm(Status ~  Residual_sugar*Alcohol, data = wineQualityTrain, family = "binomial")
summary(glmFit2)
ggiraphExtra::ggPredict(glmFit2)
glmFit2 <- glm(Status ~  Sulphates*Alcohol, data = wineQualityTrain, family = "binomial")
summary(glmFit2)
ggiraphExtra::ggPredict(glmFit2)
glmFit2 <- glm(Status ~  Volatile_Acidity*Alcohol, data = wineQualityTrain, family = "binomial")
glmFit2 <- glm(Status ~  Volatile_acidity*Alcohol, data = wineQualityTrain, family = "binomial")
summary(glmFit2)
ggiraphExtra::ggPredict(glmFit2)
glmFit <- glm(Status ~  Volatile_acidity*Residual_sugar, data = wineQualityTrain, family = "binomial")
summary(glmFit)
ggiraphExtra::ggPredict(glmFit)
table(wineQualityTrain$Status, wineQualityTrain$pH)
table(wineQualityTrain$Status, wineQualityTrain$Volatile_acidity)
table(wineQualityTrain$Status, wineQualityTrain$Alcohol)
table(wineQualityTrain$Status, wineQualityTrain$pH, cut(wineQualityTrain$Alcohol, breaks = 2))[, , 1]
table(wineQualityTrain$Status, wineQualityTrain$pH > 3)
table(wineQualityTrain$Status, wineQualityTrain$pH)
glmFit3 <- glm(Status ~  Volatile_acidity*pH, data = wineQualityTrain, family = "binomial")
summary(glmFit3)
ggiraphExtra::ggPredict(glmFit3)
wineSum <- wineQualityTrain %>% group_by(Alcohol) %>% summarize(propStatus = mean(Status), n = n())
wineSum <- wineQualityTrain %>% group_by(Alcohol) %>% summarize(propStatus = mean(Status), n = n())
ggplot(wineSum, aes(x = Alcohol, y = propStatus, size = n)) + geom_point(stat = "identity")
wineSum2 <- wineQualityTrain %>% group_by(pH) %>% summarize(propStatus = mean(Status), n = n())
ggplot(wineSum2, aes(x = pH, y = propStatus, size = n)) + geom_point(stat = "identity")
wineSum2 <- wineQualityTrain %>% group_by(Volatile_acidity) %>% summarize(propStatus = mean(Status), n = n())
ggplot(wineSum2, aes(x = Volatile_acidity, y = propStatus, size = n)) + geom_point(stat = "identity")
wineSum2 <- wineQualityTrain %>% group_by(Residual_sugar) %>% summarize(propStatus = mean(Status), n = n())
ggplot(wineSum2, aes(x = Residual_sugar, y = propStatus, size = n)) + geom_point(stat = "identity")
wineSum2 <- wineQualityTrain %>% group_by(pH) %>% summarize(propStatus = mean(Status), n = n())
ggplot(wineSum2, aes(x = pH, y = propStatus, size = n)) + geom_point(stat = "identity")
fit1 <- train(Status ~ ., data = wineQualityTrain,
method = "glm",
family = "binomial",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
summary(fit1)
fit1 <- train(Status ~ Alcohol + Volatile_acidity + Sulphates +
I(Volatile_acidity^2), data = wineQualityTrain,
method = "glm",
family = "binomial",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
wineQualityTest$Status <- as.factor(wineQualityTest$Status)
str(wineQualityTest)
wineQualityTrain <- wineQualityTrain %>%
mutate(Status = if_else(Quality >= 6, 1,0))
wineQualityTrain$Status <- as.factor(wineQualityTrain$Status)
glmFit <- glm(Status ~  Volatile_acidity*Residual_sugar, data = wineQualityTrain, family = "binomial")
summary(glmFit)
ggiraphExtra::ggPredict(glmFit)
glmFit2 <- glm(Status ~  Volatile_acidity*Alcohol, data = wineQualityTrain, family = "binomial")
summary(glmFit2)
ggiraphExtra::ggPredict(glmFit2)
View(wineQualityTest)
View(wineQualityTest)
View(wineQualityTrain)
library(tidyverse)
library(caret)
library(regclass)
# Read in train and test datasets
wineQualityTest <- read_delim("wineQualityTest.csv",
delim = ",",
col_names = c("Fixed_acidity", "Volatile_acidity","Citric_acid","Residual_sugar", "Chlorides", "Free_sulphur_dioxide", "Total_sulfur_dioxide", "Density", "pH", "Sulphates", "Alcohol", "Quality"), skip=1)
# Add binary status variable for wine quality to test set
wineQualityTest <- wineQualityTest %>%
mutate(Status = if_else(Quality >= 6, 1,0))
wineQualityTrain <- read_delim("wineQualityTrain.csv",
delim = ",",
col_names = c("Fixed_acidity", "Volatile_acidity","Citric_acid","Residual_sugar", "Chlorides", "Free_sulphur_dioxide", "Total_sulfur_dioxide", "Density", "pH", "Sulphates", "Alcohol", "Quality"), skip=1)
# Add binary status variable for wine quality to training set
wineQualityTrain <- wineQualityTrain %>%
mutate(Status = if_else(Quality >= 6, 1,0))
wineSum <- wineQualityTrain %>% group_by(Alcohol) %>% summarize(propStatus = mean(Status), n = n())
ggplot(wineSum, aes(x = Alcohol, y = propStatus, size = n)) + geom_point(stat = "identity")
glmFit <- glm(Status ~  Volatile_acidity*Residual_sugar, data = wineQualityTrain, family = "binomial")
summary(glmFit)
ggiraphExtra::ggPredict(glmFit)
wineQualityTest$Status <- as.factor(wineQualityTest$Status)
wineQualityTrain$Status <- as.factor(wineQualityTrain$Status)
fit1 <- train(Status ~ Alcohol + Volatile_acidity + Sulphates +
I(Volatile_acidity^2), data = wineQualityTrain,
method = "glm",
family = "binomial",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
fit1
wineQualityTrain <- read_delim("wineQualityTrain.csv",
delim = ",",
col_names = c("Fixed_acidity", "Volatile_acidity","Citric_acid","Residual_sugar", "Chlorides", "Free_sulphur_dioxide", "Total_sulfur_dioxide", "Density", "pH", "Sulphates", "Alcohol", "Type", "Quality"), skip=1)
wineQualityTest <- read_delim("wineQualityTest.csv",
delim = ",",
col_names = c("Fixed_acidity", "Volatile_acidity","Citric_acid","Residual_sugar", "Chlorides", "Free_sulphur_dioxide", "Total_sulfur_dioxide", "Density", "pH", "Sulphates", "Alcohol", "Type", "Quality"), skip=1)
library(tidyverse)
library(caret)
library(regclass)
# Read in train and test datasets
wineQualityTest <- read_delim("wineQualityTest.csv",
delim = ",",
col_names = c("Fixed_acidity", "Volatile_acidity","Citric_acid","Residual_sugar", "Chlorides", "Free_sulphur_dioxide", "Total_sulfur_dioxide", "Density", "pH", "Sulphates", "Alcohol", "Type", "Quality"), skip=1)
# Add binary status variable for wine quality to test set
wineQualityTest <- wineQualityTest %>%
mutate(Status = if_else(Quality >= 6, 1,0))
wineQualityTrain <- read_delim("wineQualityTrain.csv",
delim = ",",
col_names = c("Fixed_acidity", "Volatile_acidity","Citric_acid","Residual_sugar", "Chlorides", "Free_sulphur_dioxide", "Total_sulfur_dioxide", "Density", "pH", "Sulphates", "Alcohol", "Type", "Quality"), skip=1)
# Add binary status variable for wine quality to training set
wineQualityTrain <- wineQualityTrain %>%
mutate(Status = if_else(Quality >= 6, 1,0))
library(ggiraphExtra)
# Summaries and plots with the Status variable
table(wineQualityTrain$Status, wineQualityTrain$pH)
table(wineQualityTrain$Status, wineQualityTrain$Volatile_acidity)
table(wineQualityTrain$Status, wineQualityTrain$Alcohol)
wineSum <- wineQualityTrain %>% group_by(Alcohol) %>% summarize(propStatus = mean(Status), n = n())
ggplot(wineSum, aes(x = Alcohol, y = propStatus, size = n)) + geom_point(stat = "identity")
wineSum2 <- wineQualityTrain %>% group_by(pH) %>% summarize(propStatus = mean(Status), n = n())
ggplot(wineSum2, aes(x = pH, y = propStatus, size = n)) + geom_point(stat = "identity")
glmFit <- glm(Status ~  Volatile_acidity*Residual_sugar, data = wineQualityTrain, family = "binomial")
summary(glmFit)
ggiraphExtra::ggPredict(glmFit)
glmFit2 <- glm(Status ~  Volatile_acidity*Alcohol, data = wineQualityTrain, family = "binomial")
summary(glmFit2)
ggiraphExtra::ggPredict(glmFit2)
glmFit3 <- glm(Status ~  Volatile_acidity*pH, data = wineQualityTrain, family = "binomial")
summary(glmFit3)
ggiraphExtra::ggPredict(glmFit3)
View(wineQualityTrain)
library(tidyverse)
library(caret)
library(regclass)
# Read in train and test datasets
wineQualityTest <- read_delim("wineQualityTest.csv",
delim = ",",
col_names = c("Fixed_acidity", "Volatile_acidity","Citric_acid","Residual_sugar", "Chlorides", "Free_sulphur_dioxide", "Total_sulfur_dioxide", "Density", "pH", "Sulphates", "Alcohol", "Quality"), skip=1)
# Add binary status variable for wine quality to test set
wineQualityTest <- wineQualityTest %>%
mutate(Status = if_else(Quality >= 6, 1,0))
wineQualityTrain <- read_delim("wineQualityTrain.csv",
delim = ",",
col_names = c("Fixed_acidity", "Volatile_acidity","Citric_acid","Residual_sugar", "Chlorides", "Free_sulphur_dioxide", "Total_sulfur_dioxide", "Density", "pH", "Sulphates", "Alcohol", "Quality"), skip=1)
# Add binary status variable for wine quality to training set
wineQualityTrain <- wineQualityTrain %>%
mutate(Status = if_else(Quality >= 6, 1,0))
library(ggiraphExtra)
# Summaries and plots with the Status variable
table(wineQualityTrain$Status, wineQualityTrain$pH)
table(wineQualityTrain$Status, wineQualityTrain$Volatile_acidity)
table(wineQualityTrain$Status, wineQualityTrain$Alcohol)
wineSum <- wineQualityTrain %>% group_by(Alcohol) %>% summarize(propStatus = mean(Status), n = n())
ggplot(wineSum, aes(x = Alcohol, y = propStatus, size = n)) + geom_point(stat = "identity")
wineSum2 <- wineQualityTrain %>% group_by(pH) %>% summarize(propStatus = mean(Status), n = n())
ggplot(wineSum2, aes(x = pH, y = propStatus, size = n)) + geom_point(stat = "identity")
glmFit <- glm(Status ~  Volatile_acidity*Residual_sugar, data = wineQualityTrain, family = "binomial")
summary(glmFit)
ggiraphExtra::ggPredict(glmFit)
glmFit2 <- glm(Status ~  Volatile_acidity*Alcohol, data = wineQualityTrain, family = "binomial")
summary(glmFit2)
ggiraphExtra::ggPredict(glmFit2)
glmFit3 <- glm(Status ~  Volatile_acidity*pH, data = wineQualityTrain, family = "binomial")
summary(glmFit3)
ggiraphExtra::ggPredict(glmFit3)
fit2 <- train(quality ~ Fixed_acidity + Volatile_acidity + Residual_sugar + Free_sulfur_dioxide + Total_sulfur_dioxide + Density + Sulphates + Alcohol, data = wineQualityTrain,
method = "glm",
family = "binomial",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
fit2 <- train(Status ~ Fixed_acidity + Volatile_acidity + Residual_sugar + Free_sulfur_dioxide + Total_sulfur_dioxide + Density + Sulphates + Alcohol, data = wineQualityTrain,
method = "glm",
family = "binomial",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
fit2 <- train(Status ~ Fixed_acidity + Volatile_acidity + Residual_sugar + Free_sulfur_dioxide + Total_sulphur_dioxide + Density + Sulphates + Alcohol, data = wineQualityTrain,
method = "glm",
family = "binomial",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
fit2 <- train(Status ~ Fixed_acidity + Volatile_acidity + Residual_sugar + Free_sulphur_dioxide + Total_sulphur_dioxide + Density + Sulphates + Alcohol, data = wineQualityTrain,
method = "glm",
family = "binomial",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
library(tidyverse)
library(caret)
library(regclass)
# Read in train and test datasets
wineQualityTest <- read_delim("wineQualityTest.csv",
delim = ",",
col_names = c("Fixed_acidity", "Volatile_acidity","Citric_acid","Residual_sugar", "Chlorides", "Free_sulfur_dioxide", "Total_sulfur_dioxide", "Density", "pH", "Sulphates", "Alcohol", "Quality"), skip=1)
# Add binary status variable for wine quality to test set
wineQualityTest <- wineQualityTest %>%
mutate(Status = if_else(Quality >= 6, 1,0))
wineQualityTrain <- read_delim("wineQualityTrain.csv",
delim = ",",
col_names = c("Fixed_acidity", "Volatile_acidity","Citric_acid","Residual_sugar", "Chlorides", "Free_sulfur_dioxide", "Total_sulfur_dioxide", "Density", "pH", "Sulphates", "Alcohol", "Quality"), skip=1)
# Add binary status variable for wine quality to training set
wineQualityTrain <- wineQualityTrain %>%
mutate(Status = if_else(Quality >= 6, 1,0))
fit2 <- train(Status ~ Fixed_acidity + Volatile_acidity + Residual_sugar + Free_sulfur_dioxide + Total_sulfur_dioxide + Density + Sulphates + Alcohol, data = wineQualityTrain,
method = "glm",
family = "binomial",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
wineQualityTest$Status <- as.factor(wineQualityTest$Status)
wineQualityTrain$Status <- as.factor(wineQualityTrain$Status)
fit2 <- train(Status ~ Fixed_acidity + Volatile_acidity + Residual_sugar + Free_sulfur_dioxide + Total_sulfur_dioxide + Density + Sulphates + Alcohol, data = wineQualityTrain,
method = "glm",
family = "binomial",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
fit2
fit3 <- train(Status~Fixed_acidity + Volatile_acidity + Residual_sugar + Free_sulfur_dioxide + Total_sulfur_dioxide + Density + Sulphates + Alcohol + I(Fixed_acidity^2) + I(Volatile_acidity^2) + I(Residual_sugar^2) + I(Free_sulfur_dioxide^2) + I(Total_sulfur dioxide^2) + I(Density^2) + I(Sulphates^2) + I(Alcohol^2), data = wineQualityTrain,
fit3 <- train(Status~Fixed_acidity + Volatile_acidity + Residual_sugar + Free_sulfur_dioxide + Total_sulfur_dioxide + Density + Sulphates + Alcohol + I(Fixed_acidity^2) + I(Volatile_acidity^2) + I(Residual_sugar^2) + I(Free_sulfur_dioxide^2) + I(Total_sulfur_dioxide^2) + I(Density^2) + I(Sulphates^2) + I(Alcohol^2), data = wineQualityTrain,
method = "glm",
family = "binomial",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
fit3
summary(fit3)
fit4 <- train(Status~Fixed_acidity + Volatile_acidity + Residual_sugar + Free_sulfur_dioxide + Total_sulfur_dioxide + Density + Sulphates + Alcohol + Fixed_acidity:Volatile_acidity + Fixed_acidity:Residual_sugar + Fixed_acidity:Free_sulfur_dioxide + Fixed_acidity:Total_sulfur_dioxide + Fixed_acidity:Density + Fixed_acidity:Sulphates + Fixed_acidity:Alcohol, data = wineQualityTrain,
method = "glm",
family = "binomial",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
fit4
fit5 <- train(Status~Fixed_acidity + Volatile_acidity + Residual_sugar + Free_sulfur_dioxide + Total_sulfur_dioxide + Density + Sulphates + Alcohol + I(Residual_sugar^2) + I(Free_sulfur_dioxide^2), data = wineQualityTrain,
method = "glm",
family = "binomial",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
fit5
data.frame(t(fit1$results), t(fit2$results), t(fit3$results), t(fit4$results), t(fit5$results))
data.frame(t(fit1$results), t(fit2$results), t(fit3$results), t(fit4$results), t(fit5$results))
# Using the best training model on the test data
pred1 <- predict(fit4, newdata=wineQualityTest)
postResample(pred1, obs = wineQualityTest$Status)
wineQualityTrain <- read_delim("wineQualityTrain.csv",
delim = ",",
col_names = c("fixed acidity", "volatile acidity", "citric acid", "residual sugar", "chlorides", "free sulfur dioxide", "total sulfur dioxide", "density", "pH", "sulphates", "alcohol", "quality", "type"), skip=1)
wineQualityTest <- read_delim("wineQualityTest.csv",
delim = ",",
col_names = c("fixed acidity", "volatile acidity", "citric acid", "residual sugar", "chlorides", "free sulfur dioxide", "total sulfur dioxide", "density", "pH", "sulphates", "alcohol", "quality", "type"), skip=1)
#Cross validation
# Model 1 - All predictor variables
fit1 <- train(quality ~ ., data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
# Model 2 - Only significant predictor variables from Model 1
fit2 <- train(quality ~ `fixed acidity` + `volatile acidity` + `residual sugar` + `free sulfur dioxide` + `total sulfur dioxide` + density + sulphates + alcohol + type, data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
# Model 3 - Significant variables from Model 1 with respective quadratic terms
fit3 <- train(quality~`fixed acidity` + `volatile acidity` + `residual sugar` + `free sulfur dioxide` + `total sulfur dioxide` + density + sulphates + alcohol + type + I(`fixed acidity`^2) + I(`volatile acidity`^2) + I(`residual sugar`^2) + I(`free sulfur dioxide`^2) + I(`total sulfur dioxide`^2) + I(density^2) + I(sulphates^2) + I(alcohol^2), data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
# Model 4 - Significant variables from Model 1 and some interaction terms
fit4 <- train(quality~`fixed acidity` + `volatile acidity` + `residual sugar` + `free sulfur dioxide` + `total sulfur dioxide` + density + sulphates + alcohol + type + `fixed acidity`:`volatile acidity` + `fixed acidity`:`residual sugar` + `fixed acidity`:`free sulfur dioxide` + `fixed acidity`:`total sulfur dioxide` + `fixed acidity`:density + `fixed acidity`:sulphates + `fixed acidity`:alcohol, data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
# Model 5 - Subset of significant variables from Models 2, 3, 4
fit5 <- train(quality~`fixed acidity` + `volatile acidity` + `residual sugar` + `free sulfur dioxide` + `total sulfur dioxide` + density + sulphates + alcohol + type + I(`residual sugar`^2) + I(`free sulfur dioxide`^2), data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
data.frame(t(fit1$results), t(fit2$results), t(fit3$results), t(fit4$results), t(fit5$results))
# Using the best training model on the test data
pred1 <- predict(fit1, newdata=wineQualityTest)
postResample(pred1, obs = wineQualityTest$quality)
#Cross validation
set.seed(90)
# Model 1 - All predictor variables
fit1 <- train(quality ~ ., data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
# Model 2 - Only significant predictor variables from Model 1
fit2 <- train(quality ~ `fixed acidity` + `volatile acidity` + `residual sugar`
+ `free sulfur dioxide` + `total sulfur dioxide` + density +
sulphates + alcohol + type, data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
# Model 3 - Significant variables from Model 1 with respective quadratic terms
fit3 <- train(quality~`fixed acidity` + `volatile acidity` + `residual sugar` +
`free sulfur dioxide` + `total sulfur dioxide` + density +
sulphates + alcohol + type + I(`fixed acidity`^2) +
I(`volatile acidity`^2) + I(`residual sugar`^2) +
I(`free sulfur dioxide`^2) + I(`total sulfur dioxide`^2) +
I(density^2) + I(sulphates^2) + I(alcohol^2),
data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
# Model 4 - Significant variables from Model 1 and some interaction terms
fit4 <- train(quality~`fixed acidity` + `volatile acidity` + `residual sugar` +
`free sulfur dioxide` + `total sulfur dioxide` + density +
sulphates + alcohol + type + `fixed acidity`:`volatile acidity`
+ `fixed acidity`:`residual sugar` +
`fixed acidity`:`free sulfur dioxide` +
`fixed acidity`:`total sulfur dioxide` +
`fixed acidity`:density + `fixed acidity`:sulphates +
`fixed acidity`:alcohol, data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
# Model 5 - Subset of significant variables from Models 2, 3, 4
fit5 <- train(quality~`fixed acidity` + `volatile acidity` + `residual sugar` +
`free sulfur dioxide` + `total sulfur dioxide` +
density + sulphates + alcohol + type + I(`residual sugar`^2) +
I(`free sulfur dioxide`^2), data = wineQualityTrain,
method = "lm",
preProcess = c("center", "scale"),
trControl = trainControl(method = "cv", number = 10))
data.frame(t(fit1$results), t(fit2$results), t(fit3$results),
t(fit4$results), t(fit5$results))
